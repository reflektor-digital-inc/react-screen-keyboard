{"version":3,"sources":["../src/Keyboard.js"],"names":["Keyboard","props","handleLetterButtonClick","bind","handleBackspaceClick","handleLanguageClick","handleShiftClick","handleSymbolsClick","state","currentLanguage","defaultLanguage","showSymbols","uppercase","isUppercase","setState","console","log","key","inputNode","value","selectionStart","selectionEnd","nextValue","substring","setProp","name","onClick","setTimeout","focus","setSelectionRange","dispatchEvent","Event","isFirstLetterUppercase","nextSelectionPosition","keysSet","map","keyRow","toUpperCase","symbolsKeyValue","leftButtons","rightButtons","keys","getKeys","numbers","getSymbolsKeyValue","button","propTypes","arrayOf","node","any","isRequired","func","bool","string","defaultProps"],"mappings":"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","file":"Keyboard.js","sourcesContent":["import React, {PureComponent, PropTypes} from 'react';\nimport KeyboardButton from './KeyboardButton';\n\nimport LatinLayout from './layouts/LatinLayout';\nimport CyrillicLayout from './layouts/CyrillicLayout';\nimport SymbolsLayout from './layouts/SymbolsLayout';\n\nimport BackspaceIcon from './icons/BackspaceIcon';\nimport LanguageIcon from './icons/LanguageIcon';\nimport ShiftIcon from './icons/ShiftIcon';\n\nexport default class Keyboard extends PureComponent {\n\tstatic propTypes = {\n\t\tleftButtons: PropTypes.arrayOf(PropTypes.node),\n\t\trightButtons: PropTypes.arrayOf(PropTypes.node),\n\t\tinputNode: PropTypes.any.isRequired,\n\t\tonClick: PropTypes.func,\n\t\tisFirstLetterUppercase: PropTypes.bool,\n\t\tdefaultLanguage: PropTypes.string,\n\t};\n\n\tstatic defaultProps = {\n\t\tleftButtons: [],\n\t\trightButtons: [],\n\t\tisFirstLetterUppercase: false,\n\t\tdefaultLanguage: 'cyrrilic',\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleLetterButtonClick = this.handleLetterButtonClick.bind(this);\n\t\tthis.handleBackspaceClick = this.handleBackspaceClick.bind(this);\n\t\tthis.handleLanguageClick = this.handleLanguageClick.bind(this);\n\t\tthis.handleShiftClick = this.handleShiftClick.bind(this);\n\t\tthis.handleSymbolsClick = this.handleSymbolsClick.bind(this);\n\n\t\tthis.state = {\n\t\t\tcurrentLanguage: props.defaultLanguage,\n\t\t\tshowSymbols: false,\n\t\t\tuppercase: this.isUppercase(),\n\t\t};\n\t}\n\n\thandleLanguageClick() {\n\t\tthis.setState({currentLanguage: this.state.currentLanguage === 'latin' ? 'cyrrilic' : 'latin'});\n\t}\n\n\thandleShiftClick() {\n\t\tconsole.log(\"shift!\");\n\t\tthis.setState({uppercase: !this.state.uppercase});\n\t}\n\n\thandleSymbolsClick() {\n\t\tthis.setState({showSymbols: !this.state.showSymbols});\n\t}\n\n\thandleLetterButtonClick(key) {\n\t\tconsole.log(\"Keyy: \", key);\n\n\t\tconst {inputNode} = this.props;\n\t\tconst {value, selectionStart, selectionEnd} = inputNode;\n\t\tvar nextValue = value.substring(0, selectionStart) + key + value.substring(selectionEnd);\n\n\n\t\tconsole.log(\"inputNode \", inputNode);\n\n\t\tthis.props.setProp(inputNode.name, nextValue);\n\t\tinputNode.value = nextValue;\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(nextValue);\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tinputNode.focus();\n\t\t\tinputNode.setSelectionRange(selectionStart + 1, selectionStart + 1);\n\t\t}, 0);\n\t\tthis.setState({uppercase: this.isUppercase()});\n\t\tinputNode.dispatchEvent(new Event('input'));\n\t}\n\n\tisUppercase() {\n\t\tconst {inputNode, isFirstLetterUppercase} = this.props;\n\t\treturn false;\n\t\t// return !inputNode.value.length && isFirstLetterUppercase;\n\t}\n\n\thandleBackspaceClick() {\n\t\tconst {inputNode} = this.props;\n\t\tconst {value, selectionStart, selectionEnd} = inputNode;\n\t\tlet nextValue;\n\t\tlet nextSelectionPosition;\n\t\tif (selectionStart === selectionEnd) {\n\t\t\tnextValue = value.substring(0, selectionStart - 1) + value.substring(selectionEnd);\n\t\t\tnextSelectionPosition = selectionStart - 1;\n\t\t} else {\n\t\t\tnextValue = value.substring(0, selectionStart) + value.substring(selectionEnd);\n\t\t\tnextSelectionPosition = selectionStart;\n\t\t}\n\t\tnextSelectionPosition = (nextSelectionPosition > 0) ? nextSelectionPosition : 0;\n\n\t\tinputNode.value = nextValue;\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(nextValue);\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tinputNode.focus();\n\t\t\tinputNode.setSelectionRange(nextSelectionPosition, nextSelectionPosition);\n\t\t}, 0);\n\t\tthis.setState({uppercase: this.isUppercase()});\n\t\tinputNode.dispatchEvent(new Event('change'));\n\t}\n\n\tgetKeys() {\n\t\tlet keysSet;\n\t\tif (this.state.showSymbols) {\n\t\t\tkeysSet = SymbolsLayout;\n\t\t} else if (this.state.currentLanguage === 'latin') {\n\t\t\tkeysSet = LatinLayout;\n\t\t} else {\n\t\t\tkeysSet = CyrillicLayout;\n\t\t}\n\n\t\treturn keysSet;\n\n\t\treturn this.state.uppercase ?\n\t\t\tkeysSet.map(keyRow => keyRow.map(key => key.toUpperCase()))\n\t\t\t: keysSet;\n\t}\n\n\tgetSymbolsKeyValue() {\n\t\tlet symbolsKeyValue;\n\t\tif (!this.state.showSymbols) {\n\t\t\tsymbolsKeyValue = '.?!&';\n\t\t} else if (this.state.currentLanguage === 'latin') {\n\t\t\tsymbolsKeyValue = 'Abc';\n\t\t} else {\n\t\t\tsymbolsKeyValue = 'Абв';\n\t\t}\n\t\treturn symbolsKeyValue;\n\t}\n\n\trender() {\n\t\tconst {leftButtons, rightButtons, inputNode} = this.props;\n\t\tconst keys = this.getKeys();\n\t\tconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n\t\tconst symbolsKeyValue = this.getSymbolsKeyValue();\n\n\t\treturn (\n\t\t\t<div className=\"keyboard\">\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{numbers.map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tclasses={\"keyboard-numberButton\"}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue='Del'\n\t\t\t\t\t\tclasses=\"keyboard-backspace keyboard-last-in-row\"\n\t\t\t\t\t\tonClick={this.handleBackspaceClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{keys[0].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'tab'}\n\t\t\t\t\t\t\tclasses=\"keyboard-last-in-row\"\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t<div className=\"keyboard-halfButton\"></div>\n\t\t\t\t\t{keys[1].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'@'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'é'}\n\t\t\t\t\t\t\tclasses=\"keyboard-last-in-row\"\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"keyboard-halfButton\"></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{keys[2].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'-'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'_'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'.'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={`'`}\n\t\t\t\t\t\t\tclasses=\"keyboard-last-in-row\"\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t// \t<KeyboardButton\n\t\t\t\t// \t\tvalue={symbolsKeyValue}\n\t\t\t\t// \t\tonClick={this.handleSymbolsClick}\n\t\t\t\t// \t/>\n\t\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{\n\t\t\t\t\t\t// leftButtons\n\t\t\t\t\t}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={'Shift'}\n\t\t\t\t\t\tclasses=\"keyboard-shift\"\n\t\t\t\t\t\tonClick={this.handleShiftClick}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t// <KeyboardButton\n\t\t\t\t\t// \tvalue={<LanguageIcon />}\n\t\t\t\t\t// \tonClick={this.handleLanguageClick}\n\t\t\t\t\t// />\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t// \ttrue ?\n\t\t\t\t\t// \t<KeyboardButton\n\t\t\t\t\t// \t\tvalue={'@'}\n\t\t\t\t\t// \t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t// \t/>\n\t\t\t\t\t// : null\n\t\t\t\t}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={'Space'}\n\t\t\t\t\t\tclasses=\"keyboard-space\"\n\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t{\n\t\t\t\t\t\t// rightButtons\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}